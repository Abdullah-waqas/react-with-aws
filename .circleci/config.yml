version: 2.1

executors:
  app-executor:
    docker:
      - image: cimg/node:16.17.0
      # - image: circleci/node:13.3.0
    working_directory: ~/repo

aliases:
  - &show-current-branch-name
    run:
      name: Show Current Branch
      command: echo ${CIRCLE_BRANCH}

  - &restore-cache
    restore_cache:
      keys:
        - app-{{ .Environment.CACHE_VERSION }}-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found
        - app-
  - &install-dependencies
    run:
      name: Install Dependencies
      command: npm install

  - &save-cache
    save_cache:
      paths:
        - node_modules
      key: app-{{ .Environment.CACHE_VERSION }}-{{ checksum "package.json" }}

  - &install-aws-cli
    run:
      name: Installing AWS CLI
      working_directory: /
      command: |
        sudo apt-get -y -qq update
        sudo apt-get install -y awscli
        sudo apt-get install -y python python3-pip build-essential
      # sudo apt-get install -y python-pip python-dev build-essential

  - &build-project
    run:
      name: Build Project
      command: |
        npm install
        npm run build
        cd build
        zip ../build.zip -r * .[^.]*
        echo "Build Successful"

jobs:
  build:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *restore-cache
      - *install-dependencies
      - *save-cache

  linting:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *restore-cache
      - run:
          name: 'Run Linting'
          command: npm run lint

  deploy-to-aws-s3:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install-aws-cli
      - *build-project

      - run:
          name: Deploy to AWS S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
              then
                echo "Master S3"
                aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_PRODUCTION} --delete
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
              then
                echo "Staging S3"
                aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_STAGING} --delete
            else
              echo "Dev S3"
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_DEV} --delete
            fi

  deploy-to-cloudfront:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install-aws-cli
      - *build-project

      - run:
          name: Deploy to AWS Cloudfront
          command: |
            aws configure set preview.cloudfront true
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              echo "Master cloudfront"
              aws cloudfront create-invalidation --distribution-id ${PRODUCTION_DISTRIBUTION_ID} --path /\*
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              echo "Staging cloudfront"
              aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --path /\*
            else
              echo "dev cloudfront"
              aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --path /\*
            fi

workflows:
  build-and-deploy:
    jobs:
      - build
      - linting:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - master
      - deploy-to-aws-s3:
          requires:
            - linting
          filters:
            branches:
              only:
                - develop
                - staging
                - master
      - deploy-to-cloudfront:
          requires:
            - deploy-to-aws-s3
          filters:
            branches:
              only:
                - develop
                - staging
                - master
